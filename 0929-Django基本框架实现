django
 1、mvc模式：
	models模型
	views视图
	controller控制器
2、django mvt模式
	models模型
	views视图 （controller控制器)
	templates模板 
3、django的工作原理
	用户发送请求---------(http://www.163.com)----------->在django urls.py中找对应的地址-------->在django views中找对应的方法 ----------->处理models的操作--------->逻辑控制--------->在templates找到相应的视图模板 ---------->显示给用户处理结果视图
4、django的安装 
	pip3 install django
5、django的项目创建
	（1）创建django的项目
		django-admin startproject 项目名称
         (2)进入到项目名称的目录里面:
		cd 项目名称
	 (3)创建django的应用
		django-admin startapp 运用名称
	 (4)修改项目名称文件夹中的settings.py，连接数据库
		i)INSTALLED_APPS={
			运用名称
		}
		ii)DATABASES={
		}
		将 ‘ENGINE'改成mysql
		'HOST'大写，数据库服务器的名称
		'PORT'大写,数据库服务器的端口  3306
		'USER'大写，数据库服务器的登陆名 root
		'PASSWORD'大写，数据库服务器的密码 
		'NAME'大写，数据库服务器的数据库名
	（5）写models
		定义一个类,models的类与数据库的表相对应，
		class UserInfo(models.Model):
			username=models.CharField(max_length=20)
			max_length 最大长度
			CharField相当于varchar(20)
	(6)根据models产生数据库的表
			python3 manage.py makemigrations
			python3 manage.py migrate
	(7)修改项目名称目录下的urls.py
			url(r'user/',views.index)
		访问的是views.index方法
	(8)在应用的目录下:
		views.py
		 添加一个index:
			def index(request):request是参数 
				return HttpResponse（"ok");
				返回给浏览器信息
		执行这个django项目
			在manage.py所在的目录下
				python manage.py runserver
	(9)模板的设置:
		设置模板的路径 在项目文件夹的settings.py
		在TEMPLATES={	}
		DIRS里加模板的路径 os.path.join(BASE_DIR,'templates')
		在应用的文件夹里有一个views.py
		def index(request):
			return render(request,'index.html')
	(10)如何跟数据库建立联系
		在数据库加入数据
		利用django的后台
				
			建用户
				python manage.py createsuperuser 
			在我们自己的表中填数据，先注册
				在应用下面的admin.py
					导入一下models里面的类
					admin.site.register(UserInfo)
		在views.py做处理
			先把对象全部显示，引入UserInfo
				UserInfo.objects.all()相当于select * from userinfo
				定义一个字典类的变量
				context={'user':users}
				传入render参数中，
				return render(request,'index.html',context)
				最后改模板
					在模板中直接输出{{}}
					{{传入参数字典的键名}}
					如果键是一个列表
					for循环遍历
					{% for u in user(键名) %}
					{%endfor%}endfor是必须有一个停止的信息
					中间输出对象的属性
					{{u.username}}
					{{u.password}}
	以上django按照工作原理的执行
总结：
	1、django-admin startproject 项目名
	2、cd 项目名
	3、django-admin startapp 应用名
	4、按照mvt顺序，先写models（在应用的文件夹里)models.py
		写类继承models.Model
			class User(models.Model):
				name=models.CharField(max_length=20)
	5、存盘，改settings 
			INSTALLED_APP=应用名
			DATABASES=数据库mysql
			参考上面
	6、同步数据库:数据库里建一数据库:create database XXXX default charset=utf8;
			然后同步
				python manage.py makemigrations
				python manage.py migrate
			在项目文件夹下的项目文件夹下
			__init__.py
			加入一句:
			import pymysql
			pymysql.install_as_MySQLdb()
	7、views.py
		return 
				HttpResponse（”直接跟字符串")
				render(request,'网页',字典类变量)
		(1)返回HttpResponse
		(2)返回不带参的网页
		(3)返回带参的网页: user=UserInfo.objects.all()
	8、urls.py
		url(r'user/',views.index)
	9、settings.py模板
			Dirs=[os.path.join(BASE_DIR,'templates')
	10、建立templates文件夹，下面建一个网页
		模板内输出{{user}}
	11、执行
		python manage.py runserver
	12、额外加入数据
		 python manage.py createsuperuser
		在admin.py里加入一句话
			admin.site.register(类名)
	13、登陆后台
		http://locahost:8000/admin
				
